# Generated by Django 4.2.4 on 2023-09-01 21:50

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('preferences', '0003_alter_preferences_id'),
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('channel_id', models.BigIntegerField(primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=256, null=True, verbose_name='Title')),
                ('username', models.CharField(blank=True, max_length=256, null=True, verbose_name='@username')),
                ('delete_albums', models.BooleanField(default=True, verbose_name='Delete albums')),
                ('change_username', models.BooleanField(default=True, verbose_name='Change username')),
                ('deletions_count_for_username_change', models.PositiveSmallIntegerField(default=10)),
                ('allowed_languages', models.CharField(blank=True, max_length=256, null=True, verbose_name='Allowed languages')),
            ],
            options={
                'verbose_name': 'channel',
                'verbose_name_plural': 'channels',
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('preferences_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='preferences.preferences')),
                ('admins', models.TextField(blank=True, help_text='List of admin IDs separated by spaces or line breaks', max_length=256, null=True, verbose_name='Admin list')),
                ('individual_allocations', models.BooleanField(default=True, verbose_name='Individual allocations')),
                ('chatlist_invite', models.CharField(blank=True, max_length=16, null=True, verbose_name='Chatlist invite')),
            ],
            options={
                'verbose_name': 'list',
                'verbose_name_plural': 'lists',
            },
            bases=('preferences.preferences',),
            managers=[
                ('singleton', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='UserBot',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='üïê Created, UTC')),
                ('user_id', models.BigIntegerField(primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=256, null=True, verbose_name='@username')),
                ('first_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='Last name')),
                ('phone_number', models.CharField(max_length=32, verbose_name='Phone number')),
            ],
            options={
                'verbose_name': 'userbot',
                'verbose_name_plural': 'userbots',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_date', models.DateTimeField(verbose_name='üïê Post date, UTC')),
                ('post_id', models.BigIntegerField(verbose_name='ID')),
                ('views', models.PositiveBigIntegerField(verbose_name='Views')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.channel', verbose_name='Channel')),
            ],
            options={
                'verbose_name': 'post',
                'verbose_name_plural': 'posts',
                'ordering': ('-post_date',),
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='üïê Created, UTC')),
                ('type', models.PositiveSmallIntegerField(choices=[('DELETION', 'üóëÔ∏è Deletion'), ('USERNAME_CHANGE', 'üë§ Username change')], verbose_name='Type')),
                ('post_date', models.DateTimeField(blank=True, null=True, verbose_name='üïê Post date, UTC')),
                ('channel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bot.channel', verbose_name='Channel')),
                ('userbot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.userbot')),
            ],
            options={
                'verbose_name': 'log',
                'verbose_name_plural': 'logs',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Limitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='üïê Created, UTC')),
                ('views', models.PositiveBigIntegerField(verbose_name='Views')),
                ('start_date', models.DateField(verbose_name='Start date, UTC')),
                ('end_date', models.DateField(verbose_name='End date, UTC')),
                ('no_start_date', models.BooleanField(default=False, verbose_name='No start date')),
                ('no_end_date', models.BooleanField(default=False, verbose_name='No end date')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.channel', verbose_name='Channel')),
            ],
            options={
                'verbose_name': 'limitation',
                'verbose_name_plural': 'limitations',
                'ordering': ('-created',),
            },
        ),
    ]

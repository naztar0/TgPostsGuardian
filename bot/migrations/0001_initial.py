# Generated by Django 5.0.6 on 2024-07-19 10:33

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('channel_id', models.BigIntegerField(primary_key=True, serialize=False, unique=True, verbose_name='id')),
                ('title', models.CharField(blank=True, max_length=256, null=True, verbose_name='title')),
                ('username', models.CharField(blank=True, max_length=256, null=True, verbose_name='@username')),
                ('has_protected_content', models.BooleanField(default=False, verbose_name='has_protected_content')),
                ('last_username_change', models.DateTimeField(blank=True, default=None, null=True, verbose_name='last_username_change_utc')),
                ('history_days_limit', models.PositiveSmallIntegerField(default=30, verbose_name='history_days_limit')),
                ('delete_albums', models.BooleanField(default=True, verbose_name='delete_albums')),
                ('republish_today_posts', models.BooleanField(default=True, verbose_name='republish_today_deleted_posts')),
                ('deletions_count_for_username_change', models.PositiveSmallIntegerField(default=0, help_text='deletions_count_for_username_change_help_text', verbose_name='deletions_count_for_username_change')),
                ('delete_posts_after_days', models.PositiveSmallIntegerField(default=90, verbose_name='delete_all_posts_after_days')),
            ],
            options={
                'verbose_name': 'channel',
                'verbose_name_plural': 'channels',
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admins', models.TextField(blank=True, help_text='admins_help_text', max_length=256, null=True, verbose_name='admin_list')),
                ('chatlist_invite', models.CharField(blank=True, max_length=16, null=True, verbose_name='chatlist_invite')),
                ('archive_channel', models.BigIntegerField(blank=True, null=True, verbose_name='archive_channel_id')),
                ('username_suffix_length', models.PositiveSmallIntegerField(default=2, verbose_name='username_suffix_length')),
                ('check_post_views_interval', models.PositiveSmallIntegerField(default=60, verbose_name='check_post_views_interval_seconds')),
                ('check_post_deletions_interval', models.PositiveSmallIntegerField(default=60, verbose_name='check_post_deletions_interval_seconds')),
                ('check_stats_interval', models.PositiveSmallIntegerField(default=120, verbose_name='check_stats_interval_seconds')),
                ('delete_old_posts_interval', models.PositiveSmallIntegerField(default=60, verbose_name='delete_old_posts_interval_minutes')),
                ('username_change_cooldown', models.PositiveSmallIntegerField(default=120, verbose_name='username_change_cooldown_minutes')),
                ('individual_allocations', models.BooleanField(default=False, help_text='individual_allocations_help_text', verbose_name='individual_allocations')),
            ],
            options={
                'verbose_name': 'list',
                'verbose_name_plural': 'lists',
            },
        ),
        migrations.CreateModel(
            name='UserBot',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created_utc')),
                ('user_id', models.BigIntegerField(primary_key=True, serialize=False, unique=True, verbose_name='id')),
                ('username', models.CharField(blank=True, max_length=256, null=True, verbose_name='@username')),
                ('first_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='first_name')),
                ('last_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='last_name')),
                ('phone_number', models.CharField(max_length=32, unique=True, verbose_name='phone_number')),
                ('ping_time', models.DateTimeField(auto_now_add=True, verbose_name='ping_time_utc')),
            ],
            options={
                'verbose_name': 'userbot',
                'verbose_name_plural': 'userbots',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Limitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created_utc')),
                ('views_for_deletion', models.PositiveBigIntegerField(default=0, verbose_name='views_for_deletion')),
                ('views_difference_for_deletion', models.PositiveSmallIntegerField(default=0, verbose_name='views_difference_for_deletion')),
                ('views_difference_for_deletion_interval', models.PositiveSmallIntegerField(default=60, verbose_name='views_difference_for_deletion_interval_minutes')),
                ('lang_stats_restrictions', models.TextField(blank=True, help_text='lang_stats_restrictions_help_text', max_length=256, null=True, verbose_name='lang_stats_restrictions')),
                ('hourly_distribution', models.BooleanField(default=False, help_text='hourly_distribution_help_text', verbose_name='hourly_distribution')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='start_date_utc')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='end_date_utc')),
                ('start_after_days', models.PositiveIntegerField(default=0, verbose_name='start_after_days')),
                ('end_after_days', models.PositiveIntegerField(default=0, verbose_name='end_after_days')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.channel', verbose_name='channel')),
            ],
            options={
                'verbose_name': 'limitation',
                'verbose_name_plural': 'limitations',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='PostCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_date', models.DateTimeField(verbose_name='post_date_utc')),
                ('last_check', models.DateTimeField(auto_now_add=True, verbose_name='last_check_utc')),
                ('post_id', models.BigIntegerField(verbose_name='id')),
                ('views', models.PositiveBigIntegerField(verbose_name='views')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.channel', verbose_name='channel')),
            ],
            options={
                'verbose_name': 'post',
                'verbose_name_plural': 'posts',
                'ordering': ('-post_date',),
            },
        ),
        migrations.CreateModel(
            name='StatsViews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created_utc')),
                ('language', models.CharField(blank=True, max_length=32, null=True, verbose_name='language')),
                ('value', models.PositiveBigIntegerField(verbose_name='value')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.channel', verbose_name='channel')),
            ],
            options={
                'verbose_name': 'view',
                'verbose_name_plural': 'views',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created_utc')),
                ('type', models.CharField(choices=[('DELETION', 'deletion'), ('USERNAME_CHANGE', 'username_change')], max_length=16, verbose_name='type')),
                ('post_id', models.BigIntegerField(blank=True, default=None, null=True, verbose_name='post_id')),
                ('post_date', models.DateTimeField(blank=True, default=None, null=True, verbose_name='post_date_utc')),
                ('post_views', models.PositiveBigIntegerField(blank=True, default=None, null=True, verbose_name='post_views')),
                ('reason', models.CharField(blank=True, choices=[('DELETIONS_LIMIT', 'deletions_limit'), ('LANGUAGE_STATS_VIEWS_LIMIT', 'language_stats_views_limit'), ('LANGUAGE_STATS_VIEWS_DIFFERENCE_LIMIT', 'language_stats_views_difference_limit'), ('THIRD_PARTY_REQUEST', 'third_party_request')], max_length=64, null=True, verbose_name='reason')),
                ('error_message', models.CharField(blank=True, max_length=256, null=True, verbose_name='error_message')),
                ('success', models.BooleanField(default=True, verbose_name='success')),
                ('channel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bot.channel', verbose_name='channel')),
                ('userbot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.userbot')),
            ],
            options={
                'verbose_name': 'log',
                'verbose_name_plural': 'logs',
                'ordering': ('-created',),
            },
        ),
        migrations.AddField(
            model_name='channel',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bot.userbot', verbose_name='owner'),
        ),
    ]
